# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

# there are runner_vms + 1 nodes (because there is also a master)
$runner_vms = 2

load '../aws_credentials.rb'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.provider :aws do |aws, override|
    inject_aws_credentials(aws, override, "runnerami")
  end

  vms = (1..$runner_vms).map{ |a| "runner-#{a}" } << 'master'

  vms.each_with_index do |i, x|
    config.vm.define vm_name = i do |config|
      config.vm.provider :aws do |aws, override|
        inject_aws_instance_name(aws, i)
      end

      config.vm.hostname = vm_name

      config.vm.provision :shell, inline: 'echo master > /tmp/file.txt' if vm_name == 'master'

      # allow root to SSH into the machines the same as ubuntu
      config.vm.provision :shell, inline: 'sudo cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/authorized_keys'
      
      #config.vm.provision :docker do |d|
        ## This image needs to be fetched and built for standard Compose demo
        ## UNCOMENT THIS LATER, WE NEED THESE FOR THE DEMO PART
        ## BUT NOW IT SPEEDS-UP PROVISIONING TEST CYCLES
        # we have pre-pulled these images in the AMI
        #d.pull_images 'busybox:latest', 'redis:latest', 'python:2.7'
        #d.build_image "/vagrant/app", args: "-t app_web"

        ## This is the Weave plugin boostrap command
        ## TODO: use this once weaveworks/docker-plugin#8 is fixed
        ##d.run "weaveplugin",
        ##  image: "weaveworks/plugin",
        ##  args: %w(
        ##    --privileged
        ##    --net=host
        ##    -v /var/run/docker.sock:/var/run/docker.sock
        ##    -v /usr/share/docker/plugins:/usr/share/docker/plugins
        ##  ).join(' '),
        ##  cmd: %w(
        ##    -debug=true
        ##    -socket=/usr/share/docker/plugins/weave.sock
        ##    -initpeercount 3
        ##  ).join(' ')
      #end

    end
  end
end

begin
  load 'Vagrantfile.local'
rescue LoadError
end
